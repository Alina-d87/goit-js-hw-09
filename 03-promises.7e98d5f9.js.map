{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,qBAC9BE,KAAMH,SAASC,cAAc,oBAC7BG,OAAQJ,SAASC,cAAc,uBAoCjC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAYb,EAAKK,KAAKS,MAY5B,OAXAC,QAAQC,IAAIH,GAEI,IAAII,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLV,EACFQ,EAAQ,uBAAwCG,OAAfb,EAAS,QAAiBa,OAAXZ,EAAW,OAEzDU,EAAK,sBAAqCE,OAAfb,EAAS,QAAiBa,OAAXZ,EAAW,SAExDI,MA9CPE,QAAQC,IAAIhB,GAEZA,EAAKC,KAAKqB,iBAAiB,UAI3B,SAAkBC,GAChBA,EAAEC,iBACF,IAAMC,EAAczB,EAAKM,OAAOQ,MAChCC,QAAQC,IAAIS,GACZ,IAAMC,EAAa1B,EAAKI,MAAMU,MAC9BC,QAAQC,IAAIU,GAEZ,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAGrCpB,EAFWoB,EAEaD,GACrBE,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAUtB,EAAUoB,EAAVpB,WACjBuB,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCb,OAAfS,EAAS,QAAiBT,OAAXZ,EAAW,UAItD0B,OAAM,SAAAN,G,IAAGO,EAAQP,EAARE,SAAUtB,EAAUoB,EAAVpB,WAClBuB,EAAAlC,GAASmC,OAAOI,QACd,sBAAuChB,OAAfe,EAAS,QAAiBf,OAAXZ,EAAW,UAM1Dc,EAAEe,OAAOC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n};\nconsole.log(refs);\n\nrefs.form.addEventListener('submit', onSubmit);\n\nlet position;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const inputAmount = refs.amount.value;\n  console.log(inputAmount);\n  const inputDelay = refs.delay.value;\n  console.log(inputDelay);\n\n  for (let i = 0; i <= inputAmount; i += 1) {\n    position = i;\n\n    createPromise(position, inputDelay)\n      .then(({ position, inputDelay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${inputDelay}ms`\n        );\n        return;\n      })\n      .catch(({ position, inputDelay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${inputDelay}ms`\n        );\n        return;\n      });\n  }\n\n  e.target.reset();\n}\n\nfunction createPromise(position, inputDelay) {\n  const shouldResolve = Math.random() > 0.3;\n  const inputStep = refs.step.value;\n  console.log(inputStep);\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${inputDelay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${inputDelay}ms`);\n      }\n    }, inputStep);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position3","inputDelay","shouldResolve","Math","random","inputStep","value","console","log","Promise","resolve","reject","setTimeout","concat","addEventListener","e","preventDefault","inputAmount","inputDelay1","i","then","param","position1","position","$parcel$interopDefault","Notify","success","catch","position2","failure","target","reset"],"version":3,"file":"03-promises.7e98d5f9.js.map"}