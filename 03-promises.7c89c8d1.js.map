{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,qBAC9BE,KAAMH,SAASC,cAAc,oBAC7BG,OAAQJ,SAASC,cAAc,uBAMjC,IAAII,EA8BJ,SAASC,EAAcC,EAAUL,GAC/B,MAAMM,EAAYV,EAAKK,KAAKM,MAG5B,OAFAC,QAAQC,IAAIH,GAEL,IAAII,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBN,QAAiBL,OAE5CY,EAAK,sBAAoBP,QAAeL,SAE3CM,MA9CPE,QAAQC,IAAIb,GAEZA,EAAKC,KAAKmB,iBAAiB,UAI3B,SAAkBC,GAChBA,EAAEC,iBACF,MAAMhB,EAASN,EAAKM,OAAOK,MAC3BC,QAAQC,IAAIP,GACZ,IAAIiB,EAAQvB,EAAKI,MAAMO,MACvBC,QAAQC,IAAIU,GAEZ,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAQkB,GAAK,EAChCjB,EAAWiB,EAEXhB,EAAcD,EAAUgB,GACrBE,MAAK,EAAGC,SAAAC,EAAQvB,MAAEA,MACjBwB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBH,QAAiBvB,UAIzC2B,OAAM,EAAGL,SAAAM,EAAQ5B,MAAEA,MAClBwB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAoBD,QAAiB5B,UAM7CiB,EAAEa,OAAOC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n};\nconsole.log(refs);\n\nrefs.form.addEventListener('submit', onSubmit);\n\nlet position;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const amount = refs.amount.value;\n  console.log(amount);\n  let delay = refs.delay.value;\n  console.log(delay);\n\n  for (let i = 0; i <= amount; i += 1) {\n    position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        return;\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        return;\n      });\n  }\n\n  e.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  const inputStep = refs.step.value;\n  console.log(inputStep);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, inputStep);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position3","inputStep","value","console","log","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","i","then","position","position1","$parcel$interopDefault","Notify","success","catch","position2","failure","target","reset"],"version":3,"file":"03-promises.7c89c8d1.js.map"}